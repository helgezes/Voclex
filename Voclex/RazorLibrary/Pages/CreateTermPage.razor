@page "/dictionary/{dictionaryId:int}/create-new-term"
@using SharedLibrary.DataTransferObjects
@using Microsoft.AspNetCore.Components.Forms
@using System.Net.Http.Json
@using Microsoft.JSInterop
@using RazorLibrary.Shared.CreateLearningModules
@inject HttpClient Http
@inject IJSRuntime JS

<div class="container">
	<EditForm Model="newTerm" OnValidSubmit="SaveChanges">
		<DataAnnotationsValidator />
		<ValidationSummary />

		<div class="form-floating mb-3">
			<InputText class="form-control" id="term-value" @bind-Value="@newTerm.Value"/>
			<label for="term-value">Term</label>
		</div>
		
		@for (var i = 0; i < modules.Length; i++)
		{
			var module = modules[i];
			var i2 = i;
			<DynamicComponent Type="module" @ref="editableLearningModules[i2]"></DynamicComponent>
		}

		<button type="submit" class="btn btn-success" disabled="@(!saveEnabled)">Save</button>
	</EditForm>
</div>

<!-- Modal -->
<div class="modal fade" id="successfulCreation" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h1 class="modal-title fs-5" id="staticBackdropLabel">Success</h1>
			</div>
			<div class="modal-body">
				New term successfully added!
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" @onclick="() => DisposeModalAndGoToUrl(GoBackToDictionaryUrl)"> Go back to dictionary</button>
				<button type="button" class="btn btn-primary" @onclick="() => DisposeModalAndGoToUrl(ContinueEditingUrl)">Continue editing</button>
			</div>
		</div>
	</div>
</div>