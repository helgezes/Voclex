@page "/term/edit/{id:int}"
@using SharedLibrary.DataTransferObjects
@using Microsoft.AspNetCore.Components.Forms
@using System.Net.Http.Json
@using RazorLibrary.Shared.EditLearningModules
@inject HttpClient Http

<div class="container">
	<EditForm Model="currentTerm" OnValidSubmit="SaveChanges">
		<DataAnnotationsValidator />
		<ValidationSummary />
		<p>
			<label>
				Term:
				<InputText id="value" @bind-Value="@currentTerm.Value" />
			</label>
		</p>
		@for (int i = 0; i < modules.Length; i++)
		{
			var module = modules[i];
			var i2 = i;
			<DynamicComponent Type="module" @ref="editableLearningModulesar[i2]"></DynamicComponent>
		}
		<button type="submit" class="btn btn-primary">Save</button>
	</EditForm>
</div>

@code {
	[Parameter]
	public int Id { get; set; }

	private TermDto currentTerm = new(0, string.Empty, 1); //todo dictionary id;

	private readonly Type[] modules = new[] { typeof(EditDefinition), typeof(EditDefinition) };

	private DynamicComponent[] editableLearningModulesar;

	protected override async Task OnInitializedAsync()
	{	//todo mb form as a component, add and edit page separate, using this component
		editableLearningModulesar = new DynamicComponent[modules.Length];

		TermDto? loadedTerm;
		if (Id != default && (loadedTerm = await Http.GetFromJsonAsync<TermDto>($"Terms?id={Id}")) != null)
			currentTerm = loadedTerm;
				
	}

	private async Task SaveChanges()
	{
		var response = await Http.PutAsJsonAsync("Terms", currentTerm);
	}
}
