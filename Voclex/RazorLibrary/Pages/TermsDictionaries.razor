@page "/dictionaries"
@inject HttpClient Http
@using System.Net.Http.Json
@using RazorLibrary.Helpers
@using Microsoft.AspNetCore.Components.Web.Virtualization
@using SharedLibrary.DataTransferObjects
@using SharedLibrary.Queries.TermsDictionary
@using RazorLibrary.Shared.Modals

<PageTitle>Dictionaries</PageTitle>
<div class="container">
	<Virtualize Items="dictionaries" Context="dictionary">
		<ItemContent>
			<div class="py-3 border btn-outline-info row">
				<a href="/dictionary/@dictionary.Id" class="col-10">
					<div class="">@dictionary.Title</div>
				</a>
				<button type="button" @onclick="() => Edit(dictionary)" class="btn btn-success col-1 fa fa-pencil" data-bs-toggle="modal" data-bs-target="#@editModalId">
				</button>
			</div>
		</ItemContent>
	</Virtualize>
</div>

<DictionaryEdit ModalId="@editModalId" Dictionary="currentEditDictionary" OnChangesSaved="StateHasChanged"></DictionaryEdit>

@code {
	private const string editModalId = "dictionaryEditModal";
	private readonly List<TermsDictionaryDto> dictionaries = new();

	private TermsDictionaryDto? currentEditDictionary = null;

	protected override async Task OnInitializedAsync()
	{
		var queryObject = new TermsDictionariesListQuery(1, int.MaxValue); //todo pagination by scroll

		var newDictionaries =
			await Http.GetFromJsonAsync<TermsDictionaryDto[]>(
				"TermsDictionary/GetList" + queryObject.ObjectPropertiesToQueryString());

		dictionaries.AddRange(newDictionaries);
	}

	private void Edit(TermsDictionaryDto dictionary)
	{
		currentEditDictionary = dictionary;
	}
}
