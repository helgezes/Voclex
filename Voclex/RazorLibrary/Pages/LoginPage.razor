@page "/login"
@using SharedLibrary.DataTransferObjects.Authentication
@using System.Net.Http.Json
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Forms
@using RazorLibrary.Helpers
@using RazorLibrary.Services.Authentication
@using RazorLibrary.Services.Interfaces

@attribute [AllowAnonymous]

@inject IAppHttpClient AppHttpClient
@inject IAppStorage Storage
@inject NavigationManager Navigation
@inject ClientJwtAuthenticationStateProvider AuthenticationStateProvider

<h3>Login</h3>

<EditForm Model="user" OnValidSubmit="OnValid" style="max-width:500px;">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="mb-2">
        <InputText class="form-control" @bind-Value="user.Name" placeholder="Enter Username"></InputText>
    </div>
    <div class="mb-2">
        <InputText type="password" class="form-control" @bind-Value="user.Password" placeholder="Enter Password"></InputText>
    </div>
    <div class="mb-2">
        <span>Don't have an account? <a href="/registration">Create a new one</a></span>
    </div>
    <div class="mb-2 text-right">
        <button class="btn btn-secondary" disabled="@isDisabled">Login</button>
    </div>
</EditForm>

@code {
    private readonly LoginModel user = new ();
    private bool isDisabled = false;

    private async Task OnValid()
    {
        isDisabled = true;
        using var msg = await AppHttpClient.ApiClient.PostAsJsonAsync("/login", user);

        if (!msg.IsSuccessStatusCode)
        {
            isDisabled = false;
            return;
        }
        
        var result = await msg.Content.ReadFromJsonAsync<LoginResult>();
            
        await Storage.SetItem("token", result!.Token);

        AuthenticationStateProvider.NotifyAuthenticationStateChanged();
        
        Navigation.NavigateTo("/");
    }
}
