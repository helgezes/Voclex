@using SharedLibrary.DataTransferObjects
@using Microsoft.AspNetCore.Components.Forms
@using RazorLibrary.Shared.LearningModulesInputs
@using RazorLibrary.Helpers
@using System.Net
@inherits CreateLearningModule<SharedLibrary.DataTransferObjects.PictureDto>

<PictureInput OnFileInput="OnFileInput" OnSuggestionSelected="OnSuggestionSelected" Term="Term"></PictureInput>

@code {
	private IBrowserFile? file;
	private string? suggestionPath;

	protected override string SaveChangesApiPath => "Pictures";
	protected override PictureDto CreateNewDto()
	{
		return new PictureDto(0, 0, string.Empty);
	}

	public override async Task<bool> SaveChanges(int termId)
	{
		if (!IsModuleCreationEnabled) return false;
		
	    FirstEntity.TermId = termId;

	    var createPath = SaveChangesApiPath;

	    var formDataBuilder = new MultipartFormDataContentBuilder()
	        .AddObjectPublicProperties(FirstEntity);

	    if (file != null)
	    {
	        formDataBuilder.AddFile(file, MaxAllowedFileSizeInMb);
	    }
	    else
	    {
	        createPath = $"{createPath}/DownloadAndCreate?pictureUrl={WebUtility.UrlEncode(suggestionPath)}";
	    }

	    var content = formDataBuilder.Build();

		await Http.PostAsync(createPath, content);

	    return true;
	}

	private void OnFileInput(IBrowserFile browserFile)
	{
		file = browserFile;
		EnableModuleCreation();
	}

    private void OnSuggestionSelected(string suggestion)
    {
        suggestionPath = suggestion;
		EnableModuleCreation();
    }

	private const int MaxAllowedFileSizeInMb = 10;
}
